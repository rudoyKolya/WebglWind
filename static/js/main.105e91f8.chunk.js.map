{"version":3,"sources":["Map/MapContext.js","Source/xyz.js","Source/osm.js","Map/Map.js","Layers/Layers.js","utils.js","Map/WindLayer/particleUtils.js","Map/WindLayer/getSubArray.js","Map/WindLayer/WindLayer.js","Map/WindLayer/shaders.js","Map/WindLayer/bufferUtils.js","Map/WindLayer/WindLayerTransformFeedback/utils.js","Map/WindLayer/WindLayerTransformFeedback/consts.js","Map/WindLayer/WindLayerTransformFeedback/webglUtils.js","Map/WindLayer/WindLayerTransformFeedback/WindLayerTransformFeedback.js","Map/WindLayer/WindLayerTransformFeedback/shaders.js","App.js","Map/WindLayer/loadImageData.js","serviceWorker.js","index.js","Map/WindLayer/2016112000.png","Map/WindLayer/2016112118.png","Map/WindLayer/2016112106.png"],"names":["MapContext","React","createContext","xyz","osm","obj","olSource","Map","children","zoom","center","mapRef","useRef","useState","map","setMap","useEffect","layer","OLTileLayer","source","on","event","context","globalCompositeOperation","fillStyle","fillRect","canvas","width","height","options","view","ol","projection","getProjection","maxZoom","minZoom","layers","controls","overlays","mapObject","setTarget","current","undefined","getView","setZoom","setCenter","Provider","value","ref","className","Layers","loadShader","gl","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","console","log","deleteShader","initShaderProgram","vSource","fSource","program","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","useProgram","getScripts","fShader","vShader","getContext","vertexShaderSource","fragmentShaderSource","generateParticle","oldPositions","x","Math","random","y","life","ceil","mapToIndex","number","n","round","convert","getSubArrayMemoized","memoizeOne","worldArray","extent","worldExtent","m","length","minX","minY","maxX","maxY","minWorldX","minWorldY","maxWorldX","maxWorldY","iMin","floor","iMax","jMin","jMax","jMinWrapped","jMaxDiff","jMaxWrapped","left","slice","row","right","i","prevArgs","newArgs","oldExtent","newExtent","equals","WindLayer","vectorsData","useContext","layerRef","removeLayer","document","createElement","particles","positionLocation","getAttribLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","Float32Array","BYTES_PER_ELEMENT","enableVertexAttribArray","colorLocation","currentArea","push","generateParticles","animationId","canvasSource","ImageCanvasSource","ratio","canvasFunction","resolution","pixelRatio","size","cancelAnimationFrame","viewport","worldProjection","getSubArray","speedFactor","windDirectionData","forEach","particle","oldPosition","vx","r","vy","g","speed","Object","assign","unshift","pop","updateParticles","data","color","index","oldX","oldColor","bufferData","DYNAMIC_DRAW","clearColor","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","clear","COLOR_BUFFER_BIT","drawArrays","POINTS","requestAnimationFrame","changed","render","ImageLayer","addLayer","normalizeLongitude","lon","normalizeValue","count","set","createBufferWithVao","buffer","vao","createVertexArray","bindVertexArray","DYNAMIC_COPY","bufferSubData","BUFFER_SIZE","varyings","transformFeedbackVaryings","INTERLEAVED_ATTRIBS","WindLayerTransformFeedback","src","trailLength","particlesNumber","setParticles","programFeedback","drawProgram","uniform1f","getUniformLocation","buffers","Array","fill","_","id","flatMap","state","dataLoaded","callback","image","Image","onload","ctx","drawImage","texture","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","activeTexture","TEXTURE0","uniform1i","loadImageData","orderedBuffers","position","draw","RASTERIZER_DISCARD","u_extent","TRANSFORM_FEEDBACK_BUFFER","uniform4fv","bindBufferBase","beginTransformFeedback","endTransformFeedback","disable","dataUpdate","images","img","img2","img3","App","mapConfig","version","setVersion","setTrailLength","setSpeed","setParticlesNumber","windLayerData","setWindLayerData","activeImage","setActiveImage","getImageData","imageData","b","groupedData","reduce","res","arr","reverse","fromLonLat","onChange","e","Number","target","name","min","max","htmlFor","checked","onClick","style","background","key","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"gOAEeA,G,OADI,IAAIC,IAAMC,e,6CCKdC,I,SCAAC,MAJf,SAAaC,GACZ,OAAO,IAAIC,IAAaD,IC6EVE,EAvEH,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OACpBC,EAASC,mBADuB,EAEhBC,mBAAS,MAFO,mBAE/BC,EAF+B,KAE1BC,EAF0B,KA8DtC,OA1DAC,qBAAU,WACN,IAAMC,EAAQ,IAAIC,IAAY,CAC1BC,OAAQf,MAEZa,EAAMG,GAAG,cAAc,SAAUC,GAC7BA,EAAMC,QAAQC,yBAA2B,mBACzCF,EAAMC,QAAQE,UAAY,yBAC1BH,EAAMC,QAAQG,SACV,EACA,EACAJ,EAAMC,QAAQI,OAAOC,MACrBN,EAAMC,QAAQI,OAAOE,OAAS,GAElCP,EAAMC,QAAQE,UAAY,yBAC1BH,EAAMC,QAAQG,SACV,EACAJ,EAAMC,QAAQI,OAAOE,OAAS,EAC9BP,EAAMC,QAAQI,OAAOC,MACrBN,EAAMC,QAAQI,OAAOE,OAAS,GAElCP,EAAMC,QAAQC,yBAA2B,iBAE7C,IAAIM,EAAU,CACVC,KAAM,IAAIC,IAAQ,CACdC,WAAYC,YAAc,aAC1BvB,OAAQ,CAAC,EAAG,GACZD,KAAM,EACNyB,QAAS,GACTC,QAAS,IAEbC,OAAQ,CACJnB,GAIJoB,SAAU,GACVC,SAAU,IAGVC,EAAY,IAAIR,IAAOF,GAG3B,OAFAU,EAAUC,UAAU7B,EAAO8B,SAC3B1B,EAAOwB,GACA,kBAAMA,EAAUC,eAAUE,MAClC,IAGH1B,qBAAU,WACDF,GACLA,EAAI6B,UAAUC,QAAQnC,KACvB,CAACA,IAGJO,qBAAU,WACDF,GAELA,EAAI6B,UAAUE,UAAUnC,KACzB,CAACA,IAGA,kBAAC,EAAWoC,SAAZ,CAAqBC,MAAO,CAACjC,QACzB,yBAAKkC,IAAKrC,EAAQsC,UAAU,UACvBzC,KCpEF0C,EAJA,SAAC,GAAkB,IAAhB1C,EAAe,EAAfA,SACjB,OAAO,6BAAMA,ICHD2C,G,MAAa,SAACC,EAAIC,EAAMlC,GACjC,IAAMmC,EAASF,EAAGG,aAAaF,GAC/B,IAAKC,EACD,OAAO,KAOX,GAJAF,EAAGI,aAAaF,EAAQnC,GACxBiC,EAAGK,cAAcH,IAEEF,EAAGM,mBAAmBJ,EAAQF,EAAGO,gBACnC,CACb,IAAMC,EAAQR,EAAGS,iBAAiBP,GAGlC,OAFAQ,QAAQC,IAAIH,GACZR,EAAGY,aAAaV,GACT,KAEX,OAAOA,IA4BEW,EAAoB,SAACb,EAAIc,EAASC,GAC3C,IAAMC,EA1BmB,SAAChB,EAAIc,EAASC,GACvC,IAAME,EAAelB,EAAWC,EAAIA,EAAGkB,cAAeJ,GAChDK,EAAiBpB,EAAWC,EAAIA,EAAGoB,gBAAiBL,GAC1D,IAAKE,IAAiBE,EAClB,OAAO,KAGX,IAAMH,EAAUhB,EAAGqB,gBACnB,OAAKL,GAILhB,EAAGsB,aAAaN,EAASC,GACzBjB,EAAGsB,aAAaN,EAASG,GACzBnB,EAAGuB,YAAYP,GAEEhB,EAAGwB,oBAAoBR,EAAShB,EAAGyB,aAO7CT,GALHhB,EAAG0B,cAAcV,GACjBhB,EAAGY,aAAaO,GAChBnB,EAAGY,aAAaK,GACT,OAZA,KAiBKI,CAAcrB,EAAIc,EAASC,GAC3C,QAAKC,IAILhB,EAAG2B,WAAWX,GACdhB,EAAGgB,QAAUA,EACNA,IAGEY,EAAa,SAAChC,EAAKiC,EAASC,GAAgC,IAAvB5D,EAAsB,uDAAZ,QAClD8B,EAAKJ,EAAIP,QAAQ0C,WAAW7D,GAElC,MAAO,CAAC8B,KAAIgC,mBAAoBF,EAASG,qBAAsBJ,EAASvD,OAAQsB,ICpDvEsC,EAAmB,WAAwB,IAAvBC,EAAsB,uDAAP,GAC5C,MAAQ,CACJC,EAAoB,EAAhBC,KAAKC,SAAgB,EACzBC,EAAoB,EAAhBF,KAAKC,SAAgB,EACzBE,KAAMH,KAAKI,KAAqB,IAAhBJ,KAAKC,UACrBH,iBAWKO,EAAa,SAACC,EAAQC,GAC/B,OAAOP,KAAKQ,OAAOF,EAAS,IAAMC,EAAI,GAAK,IAElCE,EAAU,SAACV,EAAGG,EAAGhE,EAAOC,GACjC,MAAO,CACH4D,EAAGM,EAAWN,EAAG7D,GACjBgE,EAAGG,EAAWH,EAAG/D,K,+BCEZuE,EAAsBC,aA3BR,SAACC,EAAYC,EAAQC,GAC5C,IAAMC,EAAIH,EAAWI,OACfT,EAAIK,EAAW,GAAGI,OAFoC,cAI3BH,EAJ2B,GAIrDI,EAJqD,KAI/CC,EAJ+C,KAIzCC,EAJyC,KAInCC,EAJmC,mBAMPN,EANO,GAMrDO,EANqD,KAM1CC,EAN0C,KAM/BC,EAN+B,KAMpBC,EANoB,KAQxDC,EAAOzB,KAAK0B,OAAQR,EAAOI,IAAcE,EAAYF,GAAcP,GACnEY,EAAO3B,KAAK0B,OAAQN,EAAOE,IAAcE,EAAYF,GAAcP,GACnEa,EAAO5B,KAAK0B,OAAQT,EAAOI,IAAcE,EAAYF,GAAcd,GACnEsB,EAAO7B,KAAK0B,OAAQP,EAAOE,IAAcE,EAAYF,GAAcd,GAEjEuB,GAAgBF,EAAOrB,EAAKA,GAAKA,EACjCwB,EAAWF,EAAOD,EACpBI,GAAeF,EAAcC,GAAYxB,EAG7C,GAAIwB,GAAYxB,GAFUuB,EAAcE,EAEA,CACpC,IAAMC,EAAOrB,EAAWsB,MAAMT,EAAME,GAAMtG,KAAI,SAAA8G,GAAG,OAAIA,EAAID,MAAMJ,MACzDM,EAAQxB,EAAWsB,MAAMT,EAAME,GAAMtG,KAAI,SAAA8G,GAAG,OAAIA,EAAID,MAAM,EAAGF,MACnE,OAAOC,EAAK5G,KAAI,SAAC8G,EAAKE,GAAN,4BAAgBF,GAAhB,YAAwBC,EAAMC,QAE9C,OAAQzB,EAAWsB,MAAMT,EAAME,GAAMtG,KAAI,SAAA8G,GAAG,OAAIA,EAAID,MAAMJ,EAAaE,SAIpB,SAACM,EAAUC,GAClE,IAAMC,EAAYF,EAAS,GACrBG,EAAYF,EAAQ,GAE1B,OAAOG,YAAOF,EAAWC,M,QCxBhBE,EAAY,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAChBvH,EAAOwH,qBAAWtI,GAAlBc,IACDyH,EAAW3H,iBAAO,MAqExB,OApEAI,qBAAU,WACN,GAAIF,EAEJ,OAAO,WACCyH,EAAS9F,SACT3B,EAAI0H,YAAYD,EAAS9F,YAGlC,CAAC4F,EAAavH,IACjBE,qBAAU,WACN,GAAIF,EAAJ,CACA,IAAMY,EAAS+G,SAASC,cAAc,UAF1B,EAG2C1D,EAAW,CAACvC,QAASf,GCzB/D,mMAWF,6LDcJ0B,EAHK,EAGLA,GAAIgC,EAHC,EAGDA,mBAAoBC,EAHnB,EAGmBA,qBAC/BpB,EAAkBb,EAAIgC,EAAoBC,GAE1C,IAAMsD,EAAY,IE5BE,SAACvF,GACzB,IAAMwF,EAAmBxF,EAAGyF,kBAAkBzF,EAAGgB,QAAS,YACpD0E,EAAiB1F,EAAG2F,eAE1B3F,EAAG4F,WAAW5F,EAAG6F,aAAcH,GAC/B1F,EAAG8F,oBAAoBN,EAAkB,EAAGxF,EAAG+F,OAAO,EAAO,EAAIC,aAAaC,kBAAmB,GACjGjG,EAAGkG,wBAAwBV,GAC3B,IAAMW,EAAgBnG,EAAGyF,kBAAkBzF,EAAGgB,QAAS,SACvDhB,EAAG8F,oBAAoBK,EAAe,EAAGnG,EAAG+F,OAAO,EAAO,EAAIC,aAAaC,kBAAmB,EAAID,aAAaC,mBAC/GjG,EAAGkG,wBAAwBC,GFoBvBR,CAAa3F,GFdY,SAACuF,GAE9B,IADA,IAAIa,EAAc,EACXA,EAjBoB,KAkBvBb,EAAUc,KAAKnE,KACfkE,GAAe,EEWfE,CAAkBf,GAClB,IAAIgB,EAAc,KACZC,EAAe,IAAIC,IAAkB,CACvCC,MAAO,EACP9H,WAAY,YACZ+H,eAAgB,SAACzD,EAAQ0D,EAAYC,EAAYC,GAEzCP,GACAQ,qBAAqBR,GAGzBjI,EAAOC,MAAQuI,EAAK,GACpBxI,EAAOE,OAASsI,EAAK,GACrB9G,EAAGgH,SAAS,EAAG,EAAG1I,EAAOC,MAAOD,EAAOE,QA6BvC,OA5Be,WACX,IAAMyI,EAAkBC,EAAYjC,EAAa/B,EAAQ,EAAE,KAAM,GAAI,IAAK,MFZ/D,SAACqC,EAAW4B,EAAaC,GACpD7B,EAAU8B,SAAQ,SAACC,GACf,IAAMC,EAAc,CAACnF,EAAGkF,EAASlF,EAAGG,EAAG+E,EAAS/E,GAChD+E,EAAS9E,MAAQ,EAFW,MAGbM,EAAQwE,EAASlF,EAAGkF,EAAS/E,EAAG6E,EAAkB,GAAG/D,OAAQ+D,EAAkB/D,QAAvFjB,EAHqB,EAGrBA,EAAGG,EAHkB,EAGlBA,EACJiF,EAAKJ,EAAkB7E,GAAGH,GAAGqF,EAAI,IAAM,EAAI,EAC3CC,EAAKN,EAAkB7E,GAAGH,GAAGuF,EAAI,IAAM,EAAI,EAC3CC,EAAQR,EAAkB7E,GAAGH,GAAGuF,EAAI,IAAMP,EAAkB7E,GAAGH,GAAGqF,EAAI,IACxEH,EAAS9E,MAAQ,KAAQ8E,EAASlF,EAAKoF,EAAKL,EAAcS,EAAU,GAAMN,EAASlF,EAAKoF,EAAKL,EAAcS,GAAW,GAAMN,EAAS/E,EAAKmF,EAAKP,EAAcS,EAAU,GAAMN,EAAS/E,EAAKmF,EAAKP,EAAcS,GAAW,EACzNC,OAAOC,OAAOR,EAAUpF,EAAiBoF,EAASnF,gBAElDmF,EAASlF,GAAMoF,EAAKL,EAAcS,EAClCN,EAAS/E,GAAMmF,EAAKP,EAAcS,EAClCN,EAASnF,aAAa4F,QAAQR,GAC1BD,EAASnF,aAAakB,OA9CX,IA+CXiE,EAASnF,aAAa6F,UEFlBC,CAAgB1C,EAAW4B,KAAoBF,GAC/C,IAAMiB,EAAO,GACb3C,EAAU8B,SAAQ,SAAAC,GAAa,IAAD,EACXxE,EAAQwE,EAASlF,EAAGkF,EAAS/E,EAAG0E,EAAgB,GAAG5D,OAAQ4D,EAAgB5D,QAAnFjB,EADmB,EACnBA,EAAGG,EADgB,EAChBA,EACJ4F,EAAQlB,EAAgB1E,GAAGH,GACjC8F,EAAK7B,KAAKiB,EAASlF,EAAGkF,EAAS/E,EAAG4F,EAAMV,EAAI,IAAKU,EAAMR,EAAI,IAAK,EAAK,GACrEL,EAASnF,aAAakF,SAAQ,SAACE,EAAaa,GACxC,IAAMC,EAAOvF,EAAQyE,EAAYnF,EAAGmF,EAAYhF,EAAG0E,EAAgB,GAAG5D,OAAQ4D,EAAgB5D,QACxFiF,EAAWrB,EAAgBoB,EAAK9F,GAAG8F,EAAKjG,GAC9C8F,EAAK7B,KAAKkB,EAAYnF,EAAGmF,EAAYhF,EAAG+F,EAASb,EAAI,IAAKa,EAASX,EAAI,IAAK,EAAK,GAAOS,EAAQ,GFtDjG,UE0DPpI,EAAGuI,WAAWvI,EAAG6F,aAAc,IAAIG,aAAakC,GAAOlI,EAAGwI,cAC1DxI,EAAGyI,WAAW,EAAK,EAAK,EAAK,GAC7BzI,EAAG0I,OAAO1I,EAAG2I,OACb3I,EAAG4I,kBAAkB5I,EAAG6I,UAAW7I,EAAG8I,oBAAqB9I,EAAG+I,IAAK/I,EAAG+I,KACtE/I,EAAGgJ,MAAMhJ,EAAGiJ,kBAEZjJ,EAAGkJ,WAAWlJ,EAAGmJ,OAAQ,EAAGjB,EAAK7E,OAAS,GAC1CkD,EAAc6C,uBAAsB,WAChC5C,EAAa6C,aAIrBC,GACOhL,KAGTT,EAAQ,IAAI0L,IAAW,CACzBxL,OAAQyI,IAEZrB,EAAS9F,QAAUxB,EACnBH,EAAI8L,SAAS3L,MACd,CAACH,EAAKuH,IACF,M,2DG/EEwE,G,OAAqB,SAACC,GAC/B,KAAOA,GAAO,KAAKA,GAAO,IAC1B,KAAOA,EAAM,KAAKA,GAAO,IACzB,OAAOA,IAGEC,EAAiB,SAAChK,GAC3B,OAAQA,EAAQ,GAAK,GAWZ2G,EAAoB,SAACsD,GAE9B,IADA,IAAMrE,EAAY,IAAIS,aCrBC,EDqBY4D,GAC1BlF,EAAI,EAAGA,ECtBO,EDsBHkF,EAAqBlF,GCtBlB,EDuBnBa,EAAUsE,IAAV,YAXwB,CACX,EAAhBxH,KAAKC,SAAgB,EACL,EAAhBD,KAAKC,SAAgB,EACtBD,KAAKI,KAAqB,IAAhBJ,KAAKC,UACf,EACA,EACA,IAK2CoC,GAE3C,OAAOa,GEtBEuE,EAAsB,SAAC9J,EAAI4J,EAAOrE,GAC3C,IAAMwE,EAAS/J,EAAG2F,eACZqE,EAAMhK,EAAGiK,oBAcf,OAbAjK,EAAGkK,gBAAgBF,GACnBhK,EAAG4F,WAAW5F,EAAG6F,aAAckE,GAC/B/J,EAAGuI,WAAWvI,EAAG6F,aDRM,ECQsB+D,EAAQ,EAAG5J,EAAGmK,cAC3D5E,GAAavF,EAAGoK,cAAcpK,EAAG6F,aAAc,EAAGN,GAClDvF,EAAG8F,oBAAoB,EAAG,EAAG9F,EAAG+F,OAAO,EAAOsE,GAAiB,GAC/DrK,EAAG8F,oBAAoB,EAAG,EAAG9F,EAAG+F,OAAO,EAAOsE,GAAiB,GAC/DrK,EAAG8F,oBAAoB,EAAG,EAAG9F,EAAG+F,OAAO,EAAOsE,GAAiB,GAC/DrK,EAAG8F,oBAAoB,EAAG,EAAG9F,EAAG+F,OAAO,EAAOsE,GAAiB,IAC/DrK,EAAGkG,wBAAwB,GAC3BlG,EAAGkG,wBAAwB,GAC3BlG,EAAGkG,wBAAwB,GAC3BlG,EAAGkG,wBAAwB,GAEpB,CAAC6D,EAAQC,IAEP3I,EAAgB,SAACrB,EAAIgC,EAAoBC,EAAsBqI,GAExE,IAAMtJ,EAAUhB,EAAGqB,gBACbJ,EAAejB,EAAGG,aAAaH,EAAGkB,eACxClB,EAAGI,aAAaa,EAAce,GAC9BhC,EAAGK,cAAcY,GACjBjB,EAAGsB,aAAaN,EAASC,GAEzB,IAAME,EAAiBnB,EAAGG,aAAaH,EAAGoB,iBAQ1C,OAPApB,EAAGI,aAAae,EAAgBc,GAChCjC,EAAGK,cAAcc,GACjBnB,EAAGsB,aAAaN,EAASG,GAEzBmJ,GAAYtK,EAAGuK,0BAA0BvJ,EAASsJ,EAAUtK,EAAGwK,qBAC/DxK,EAAGuB,YAAYP,KAEVhB,EAAGwB,oBAAoBR,EAAShB,EAAGyB,cAIjCT,GChCEyJ,EAA6B,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,gBAAiBhD,EAAW,EAAXA,MACrEtJ,EAASd,iBAAO6H,SAASC,cAAc,WAAWjG,QAD8B,EAEpD5B,mBAAS6I,EAAkBsE,IAFyB,mBAE/ErF,EAF+E,KAEpEsF,EAFoE,KAGhF7K,EAAKxC,iBAAOc,EAAOyD,WAAW,WAAW1C,QACzCyL,EAAkBtN,iBAAO6D,EAAcrB,ECbpB,k4DAmEA,oCDtD4D,CAAC,KAAM,KAAM,QAAS,YAAYX,QACjH0L,EAAcvN,iBAAO6D,EAAcrB,ECiErB,6NARA,gIDzDoDX,QACjE3B,EAAOwH,qBAAWtI,GAAlBc,IACDyH,EAAW3H,iBAAO,MA4ExB,OAzEAI,qBAAU,WACNoC,EAAG2B,WAAWmJ,GACd9K,EAAGgL,UAAUhL,EAAGiL,mBAAmBH,EAAiB,WAAYlD,EAAQ,OACzE,CAACA,IAEJhK,qBAAU,WACNiN,EAAavE,EAAkBsE,MAChC,CAACA,IACJhN,qBAAU,WACN,GAAKF,EAEL,OAAO,WACCyH,EAAS9F,SACT3B,EAAI0H,YAAYD,EAAS9F,YAGlC,CAACqL,EAAKhN,EAAKiN,EAAaC,EAAiBrF,IAE5C3H,qBAAU,WACN,GAAKF,EAAL,CACA,IAAMwN,EAAU,IAAIC,MAAMR,GAAaS,MAAM,GAAG1N,KAAI,SAAC2N,EAAGC,GAAJ,OAAkB,IAAPA,EAAWxB,EAAoB9J,EAAI4K,EAAiBrF,GAAauE,EAAoB9J,EAAI4K,MAAkBW,SAAQ,SAAA7G,GAAC,OAAIA,KACvL1E,EAAGkK,gBAAgB,MACnBlK,EAAG4F,WAAW5F,EAAG6F,aAAc,MAC/B,IAAM2F,EAAQ,CACVxB,IAAK,EACLD,OAAQ,GAER0B,GAAa,GD8DI,SAACzL,EAAIgB,EAAS0J,EAAKgB,GAC5C,IAAMC,EAAQ,IAAIC,MAElBD,EAAME,OAAS,WACX,IAAMvN,EAAS+G,SAASC,cAAc,UAChCwG,EAAMxN,EAAOyD,WAAW,MAE9BzD,EAAOC,MAAQoN,EAAMpN,MACrBD,EAAOE,OAASmN,EAAMnN,OAEtBsN,EAAIC,UAAUJ,EAAO,EAAG,GAxBH,SAAC3L,EAAI2L,EAAO3K,GACrC,IAAMgL,EAAUhM,EAAGiM,gBACnBjM,EAAGkM,YAAYlM,EAAGmM,oBAAqB,GACvCnM,EAAGoM,YAAYpM,EAAGqM,WAAYL,GAC9BhM,EAAGsM,cAActM,EAAGqM,WAAYrM,EAAGuM,eAAgBvM,EAAGwM,eACtDxM,EAAGsM,cAActM,EAAGqM,WAAYrM,EAAGyM,eAAgBzM,EAAGwM,eACtDxM,EAAGsM,cAActM,EAAGqM,WAAYrM,EAAG0M,mBAAoB1M,EAAG2M,QAC1D3M,EAAGsM,cAActM,EAAGqM,WAAYrM,EAAG4M,mBAAoB5M,EAAG2M,QAC1D3M,EAAG6M,WAAW7M,EAAGqM,WAAY,EAAGrM,EAAG8M,KAAM9M,EAAG8M,KAAM9M,EAAG+M,cAAepB,GACpE3L,EAAGoM,YAAYpM,EAAGqM,WAAY,MAC9BrM,EAAGgN,cAAchN,EAAGiN,UACpBjN,EAAGoM,YAAYpM,EAAGqM,WAAYL,GAC9BhM,EAAGkN,UAAUlN,EAAGiL,mBAAmBjK,EAAS,aAAc,GActDiL,CAAcjM,EAAI2L,EAAO3K,GACzB0K,GAAS,IAEbC,EAAMjB,IAAMA,EC3ERyC,CAAcnN,EAAI8K,EAAiBJ,GAAK,SAAC/K,GACrC8L,EAAa9L,KAEjB,IAAI4G,EAAc,KACZC,EAAe,IAAIC,IAAkB,CACvCC,MAAO,EACP9H,WAAY,YACZ+H,eAAgB,SAACzD,EAAQ0D,EAAYC,EAAYC,GAI7C,GAHIP,GACAQ,qBAAqBR,GAEpBkF,EAAL,CAOAnN,EAAOC,MAAQuI,EAAK,GACpBxI,EAAOE,OAASsI,EAAK,GACrB9G,EAAGgH,SAAS,EAAG,EAAG1I,EAAOC,MAAOD,EAAOE,QAavC,ODrCI,SAACwB,EAAIgB,EAASkK,EAAStB,EAAO4B,GAC9CxL,EAAG2B,WAAWX,GACd,IAAMoM,EAAc,sBAAOlC,EAAQ3G,MAAM,EAAGiH,EAAMzB,SAA9B,YAA0CmB,EAAQ3G,MAAMiH,EAAMzB,UAE5EsD,EAAWrN,EAAGyF,kBAAkBzE,EAAS,YACzCmH,EAAQnI,EAAGyF,kBAAkBzE,EAAS,SAC5ChB,EAAGyI,WAAW,EAAK,EAAK,EAAK,GAC7BzI,EAAG0I,OAAO1I,EAAG2I,OACb3I,EAAG4I,kBAAkB5I,EAAG6I,UAAW7I,EAAG8I,oBAAqB9I,EAAG+I,IAAK/I,EAAG+I,KACtE/I,EAAGgJ,MAAMhJ,EAAGiJ,kBACZ,IAAK,IAAIvE,EAAI,EAAGA,EAAI0I,EAAe/J,OAAQqB,GAAK,EAC5C1E,EAAG4F,WAAW5F,EAAG6F,aAAcuH,EAAe1I,IAC9C1E,EAAGkG,wBAAwBmH,GAC3BrN,EAAG8F,oBAAoBuH,EAAU,EAAGrN,EAAG+F,OAAO,EAAOsE,GAAiB,GAEtErK,EAAGkG,wBAAwBiC,GAC3BnI,EAAG8F,oBAAoBqC,EAAO,EAAGnI,EAAG+F,OAAO,EAAOsE,GAAiB,IAEnErK,EAAGkJ,WAAWlJ,EAAGmJ,OAAQ,EAAGS,GAC5B5J,EAAG4F,WAAW5F,EAAG6F,aAAc,MCSnByH,CAAKtN,EAAI+K,EAAaG,EAASN,EAAiBY,GDH1C,SAACxK,EAAShB,EAAIwL,EAAO5B,EAAO1G,EAAQgI,GAC1DlL,EAAG2B,WAAWX,GACdhB,EAAG0I,OAAO1I,EAAGuN,oBACb,IAAMC,EAAWxN,EAAGiL,mBAAmBjK,EAAS,YAChDhB,EAAG4F,WAAW5F,EAAGyN,0BAA2B,MAC5C,IAAM3I,EAAY,CAAC2E,EAAmBvG,EAAO,IAAM,IAAKA,EAAO,GAAK,GAAIuG,EAAmBvG,EAAO,IAAM,IAAKA,EAAO,GAAK,IAAIxF,IAAIiM,GACjI3J,EAAG4F,WAAW5F,EAAGyN,0BAA2B,MAC5CzN,EAAG0N,WAAWF,EAAU1I,GACxB9E,EAAGkK,gBAAgBgB,EAAQM,EAAMxB,MACjChK,EAAG2N,eAAe3N,EAAGyN,0BAA2B,EAAGvC,EAAQM,EAAMzB,SAEjE/J,EAAG4N,uBAAuB5N,EAAGmJ,QAE7BnJ,EAAGkJ,WAAWlJ,EAAGmJ,OAAQ,EAAGS,GAE5B5J,EAAG6N,uBAEH7N,EAAGkK,gBAAgB,MACnBlK,EAAG2N,eAAe3N,EAAGyN,0BAA2B,EAAG,MAEnDjC,EAAMxB,IAAOwB,EAAMxB,IAAM,GAAMkB,EAAQ7H,OAAS,EAAImI,EAAMxB,IAAM,EAChEwB,EAAMzB,OAAUyB,EAAMzB,OAAS,GAAMmB,EAAQ7H,OAAS,EAAImI,EAAMzB,OAAS,EACzE/J,EAAG8N,QAAQ9N,EAAGuN,oBClBEQ,CAAWjD,EAAiB9K,EAAIwL,EAAOZ,EAAiB1H,EAAQgI,GAGpE3E,EAAc6C,uBAAsB,WAChC5C,EAAa6C,aAIV/K,EArBHiI,EAAc6C,uBAAsB,WAChC5C,EAAa6C,gBAuBvBxL,EAAQ,IAAI0L,IAAW,CACzBxL,OAAQyI,IAEZrB,EAAS9F,QAAUxB,EACnBH,EAAI8L,SAAS3L,MACd,CAACH,EAAKgN,EAAKnF,EAAWoF,EAAaC,IAG/B,ME5ELoD,EAAS,CAACC,IAAKC,IAAMC,KAyGZC,EAxGH,WAAO,IAAD,EACc3Q,mBAAS4Q,EAAU/Q,QADjC,mBACPA,EADO,aAEUG,mBAAS,IAFnB,mBAEPJ,EAFO,aAGgBI,mBAAS,IAHzB,mBAGP6Q,EAHO,KAGEC,EAHF,OAIwB9Q,mBAAS,IAJjC,mBAIPkN,EAJO,KAIM6D,EAJN,OAKY/Q,mBAAS,IALrB,mBAKPmK,EALO,KAKA6G,EALA,OAMgChR,mBAAS,KANzC,mBAMPmN,EANO,KAMU8D,EANV,OAO4BjR,mBAAS,MAPrC,mBAOPkR,EAPO,KAOQC,EAPR,OAQwBnR,mBAASwQ,KARjC,mBAQPY,EARO,KAQMC,EARN,KAed,OALAlR,qBAAU,YC3Be,SAAC8M,EAAKgB,GAC/B,IAAMC,EAAQ,IAAIC,MACZ1D,EAAO,GACbyD,EAAME,OAAS,WACX,IAAMvN,EAAS+G,SAASC,cAAc,UAChCwG,EAAMxN,EAAOyD,WAAW,MAC9BzD,EAAOC,MAAQoN,EAAMpN,MACrBD,EAAOE,OAASmN,EAAMnN,OAEtBsN,EAAIC,UAAUJ,EAAO,EAAG,GAGxB,IAFA,IAAMsC,EAAMnC,EAAIiD,aAAa,EAAG,EAAGzQ,EAAOC,MAAOD,EAAOE,QAClDwQ,EAAYf,EAAI/F,KACbxD,EAAI,EAAGA,EAAIsK,EAAU3L,OAAQqB,GAAK,EACvCwD,EAAK7B,KAAK,CACNoB,EAAGuH,EAAUtK,GACbiD,EAAGqH,EAAUtK,EAAI,GACjBuK,EAAGD,EAAUtK,EAAI,KAGzB,IAAMwK,EAAchH,EAAKiH,QAAO,SAACC,EAAK/D,EAAGC,EAAI+D,GAIzC,OAHI/D,EAAK2C,EAAI1P,QAAU,GACnB6Q,EAAI/I,KAAKgJ,EAAI9K,MAAM+G,EAAIA,EAAK2C,EAAI1P,QAE7B6Q,IACR,IAAIE,UACP5D,EAASwD,IAEbvD,EAAMjB,IAAMA,EDCRyC,CAAc0B,GAAa,SAAC3G,GACxB0G,EAAiB1G,QAEtB,CAAC2G,IAEA,6BACI,kBAAC,EAAD,CAAKvR,OAAQiS,YAAWjS,GAASD,KAAMA,GACnC,kBAAC,EAAD,KACKsR,GAA6B,IAAZL,EAAgB,kBAAC,EAAD,CAAWrJ,YAAa0J,IAAmB,KAChE,IAAZL,GAAiB,kBAAC,EAAD,CAA4B1D,gBAAiBA,EAAiBF,IAAKmE,EAAalE,YAAaA,EAAa/C,MAAOA,MAG3I,6BACI,kCACI,4CAEA,6BACI,2BACI4H,SAAU,SAACC,GACPjB,EAAekB,OAAOD,EAAEE,OAAOhQ,SAEnCM,KAAK,QACLqL,GAAG,eACHsE,KAAK,eACLC,IAAK,EACLC,IAAK,GACLnQ,MAAOgL,IACX,2BAAOoF,QAAQ,gBAAf,gBAA4CpF,IAEhD,6BACI,2BACI6E,SAAU,SAACC,GACPf,EAAmBgB,OAAOD,EAAEE,OAAOhQ,SAEvCM,KAAK,QACLqL,GAAG,mBACHsE,KAAK,mBACLC,IAAK,IACLC,IAAK,IACLnQ,MAAOiL,IACX,2BAAOmF,QAAQ,oBAAf,oBAAoDnF,IAGxD,6BACI,2BACI4E,SAAU,SAACC,GACPhB,EAASiB,OAAOD,EAAEE,OAAOhQ,SAE7BM,KAAK,QACLqL,GAAG,QACHsE,KAAK,QACLC,IAAK,GACLC,IAAK,IACLnQ,MAAOiI,IACX,2BAAOmI,QAAQ,oBAAf,SAAyCnI,MAKrD,6BACI,kCACI,4CAEA,6BACI,2BAAO4H,SAAU,kBAAMjB,EAAW,IAAItO,KAAK,QAAQqL,GAAG,OAAOsE,KAAK,QAAQjQ,MAAO,EAC1EqQ,QAAqB,IAAZ1B,IAChB,2BAAOyB,QAAQ,QAAf,YAGJ,6BACI,2BAAOP,SAAU,kBAAMjB,EAAW,IAAItO,KAAK,QAAQqL,GAAG,QAAQsE,KAAK,QAAQjQ,MAAM,QAC1EqQ,QAAqB,IAAZ1B,IAChB,2BAAOyB,QAAQ,SAAf,uBAGR,6CACC/B,EAAOtQ,KAAI,SAAAgH,GACR,OACI,yBACIuL,QAAS,WACLnB,EAAepK,IAEnBwL,MAAO,CAACC,WAAYzL,IAAMmK,EAAc,MAAQ,QAChDuB,IAAK1L,GACJA,SEpGT2L,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASpH,OACP,kBAAC,IAAMqH,WAAP,KACE,kBAAC,EAAD,OAEFtL,SAASuL,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3Q,GACLE,QAAQF,MAAMA,EAAM4Q,a,mBEzI5BC,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.105e91f8.chunk.js","sourcesContent":["import React from \"react\";\r\nconst MapContext = new React.createContext();\r\nexport default MapContext;\r\n","import * as olSource from \"ol/source\";\r\n\r\nfunction xyz({ url, attributions, maxZoom }) {\r\n\treturn new olSource.XYZ({ url, attributions, maxZoom });\r\n}\r\n\r\nexport default xyz;\r\n","import * as olSource from \"ol/source\";\r\n\r\nfunction osm(obj) {\r\n\treturn new olSource.OSM(obj);\r\n}\r\n\r\nexport default osm;","import React, {useRef, useState, useEffect} from \"react\"\r\nimport \"./Map.css\";\r\nimport MapContext from \"./MapContext\";\r\nimport * as ol from \"ol\";\r\nimport {get as getProjection} from 'ol/proj';\r\nimport OLTileLayer from \"ol/layer/Tile\";\r\nimport {osm} from \"../Source\";\r\n\r\n\r\nconst Map = ({children, zoom, center}) => {\r\n    const mapRef = useRef();\r\n    const [map, setMap] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const layer = new OLTileLayer({\r\n            source: osm(),\r\n        })\r\n        layer.on('postrender', function (event) {\r\n            event.context.globalCompositeOperation = 'destination-over';\r\n            event.context.fillStyle = 'rgba(170, 211, 223, 1)';\r\n            event.context.fillRect(\r\n                0,\r\n                0,\r\n                event.context.canvas.width,\r\n                event.context.canvas.height / 2\r\n            );\r\n            event.context.fillStyle = 'rgba(242, 239, 233, 1)';\r\n            event.context.fillRect(\r\n                0,\r\n                event.context.canvas.height / 2,\r\n                event.context.canvas.width,\r\n                event.context.canvas.height / 2\r\n            );\r\n            event.context.globalCompositeOperation = 'source-over';\r\n        });\r\n        let options = {\r\n            view: new ol.View({\r\n                projection: getProjection('EPSG:4326'),\r\n                center: [0, 0],\r\n                zoom: 2,\r\n                maxZoom: 10,\r\n                minZoom: 1\r\n            }),\r\n            layers: [\r\n                layer\r\n            ],\r\n\r\n\r\n            controls: [],\r\n            overlays: []\r\n        };\r\n\r\n        let mapObject = new ol.Map(options);\r\n        mapObject.setTarget(mapRef.current);\r\n        setMap(mapObject);\r\n        return () => mapObject.setTarget(undefined);\r\n    }, []);\r\n\r\n    // zoom change handler\r\n    useEffect(() => {\r\n        if (!map) return;\r\n        map.getView().setZoom(zoom);\r\n    }, [zoom]);\r\n\r\n    // center change handler\r\n    useEffect(() => {\r\n        if (!map) return;\r\n\r\n        map.getView().setCenter(center)\r\n    }, [center])\r\n\r\n    return (\r\n        <MapContext.Provider value={{map}}>\r\n            <div ref={mapRef} className=\"ol-map\">\r\n                {children}\r\n            </div>\r\n        </MapContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Map;","import React from \"react\";\r\n\r\nconst Layers = ({ children }) => {\r\n\treturn <div>{children}</div>;\r\n};\r\n\r\nexport default Layers;","export const loadShader = (gl, type, source) => {\r\n    const shader = gl.createShader(type)\r\n    if (!shader) {\r\n        return null\r\n    }\r\n\r\n    gl.shaderSource(shader, source)\r\n    gl.compileShader(shader)\r\n\r\n    const isCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\r\n    if (!isCompiled) {\r\n        const error = gl.getShaderInfoLog(shader);\r\n        console.log(error)\r\n        gl.deleteShader(shader)\r\n        return null\r\n    }\r\n    return shader\r\n}\r\n\r\nexport const createProgram = (gl, vSource, fSource) => {\r\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vSource);\r\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fSource);\r\n    if (!vertexShader || !fragmentShader) {\r\n        return null\r\n    }\r\n\r\n    const program = gl.createProgram()\r\n    if (!program) {\r\n        return null\r\n    }\r\n\r\n    gl.attachShader(program, vertexShader)\r\n    gl.attachShader(program, fragmentShader)\r\n    gl.linkProgram(program)\r\n\r\n    const isLinked = gl.getProgramParameter(program, gl.LINK_STATUS)\r\n    if (!isLinked) {\r\n        gl.deleteProgram(program);\r\n        gl.deleteShader(fragmentShader);\r\n        gl.deleteShader(vertexShader);\r\n        return null;\r\n    }\r\n    return program\r\n}\r\nexport const initShaderProgram = (gl, vSource, fSource) => {\r\n    const program = createProgram(gl, vSource, fSource)\r\n    if (!program) {\r\n        return false\r\n    }\r\n\r\n    gl.useProgram(program)\r\n    gl.program = program\r\n    return program\r\n}\r\n\r\nexport const getScripts = (ref, fShader, vShader, context = 'webgl') => {\r\n    const gl = ref.current.getContext(context)\r\n\r\n    return {gl, vertexShaderSource: vShader, fragmentShaderSource: fShader, canvas: ref}\r\n}","export const particlesNumber = 10000\r\nexport const trailLength = 10\r\n\r\nexport const speedFactor = 2\r\n\r\n\r\nexport const generateParticle = (oldPositions = []) => {\r\n    return ({\r\n        x: (Math.random() * 2) - 1,\r\n        y: (Math.random() * 2) - 1,\r\n        life: Math.ceil(Math.random() * 200),\r\n        oldPositions,\r\n    })\r\n}\r\n\r\nexport const generateParticles = (particles) => {\r\n    let currentArea = 0\r\n    while (currentArea < particlesNumber) {\r\n        particles.push(generateParticle())\r\n        currentArea += 1\r\n    }\r\n}\r\nexport const mapToIndex = (number, n) =>  {\r\n    return Math.round((number + 1) * (n - 1) / 2);\r\n}\r\nexport const convert = (x, y, width, height) => {\r\n    return {\r\n        x: mapToIndex(x, width),\r\n        y: mapToIndex(y, height),\r\n    }\r\n}\r\n\r\n\r\nexport const updateParticles = (particles, speedFactor, windDirectionData) => {\r\n    particles.forEach((particle) => {\r\n        const oldPosition = {x: particle.x, y: particle.y}\r\n        particle.life += 1;\r\n        const {x, y} = convert(particle.x, particle.y, windDirectionData[0].length, windDirectionData.length)\r\n        const vx = windDirectionData[y][x].r / 255 * 2 - 1;\r\n        const vy = windDirectionData[y][x].g / 255 * 2 - 1;\r\n        const speed = windDirectionData[y][x].g / 255 + windDirectionData[y][x].r / 255;\r\n        if (particle.life >= 300 || (particle.x + (vx * speedFactor * speed)) > 1 || (particle.x + (vx * speedFactor * speed)) < -1 || (particle.y + (vy * speedFactor * speed)) > 1 || (particle.y + (vy * speedFactor * speed)) < -1) {\r\n            Object.assign(particle, generateParticle(particle.oldPositions));\r\n        } else {\r\n            particle.x += (vx * speedFactor * speed);\r\n            particle.y += (vy * speedFactor * speed);\r\n            particle.oldPositions.unshift(oldPosition);\r\n            if (particle.oldPositions.length > trailLength) {\r\n                particle.oldPositions.pop();\r\n            }\r\n        }\r\n    });\r\n}","import memoizeOne from 'memoize-one';\r\nimport {equals} from 'ol/extent'\r\n\r\nexport const getSubArray = (worldArray, extent, worldExtent) => {\r\n    const m = worldArray.length;\r\n    const n = worldArray[0].length;\r\n\r\n    const [minX, minY, maxX, maxY] = extent;\r\n\r\n    const [minWorldX, minWorldY, maxWorldX, maxWorldY] = worldExtent;\r\n\r\n    let iMin = Math.floor(((minY - minWorldY) / (maxWorldY - minWorldY)) * m);\r\n    let iMax = Math.floor(((maxY - minWorldY) / (maxWorldY - minWorldY)) * m);\r\n    let jMin = Math.floor(((minX - minWorldX) / (maxWorldX - minWorldX)) * n);\r\n    let jMax = Math.floor(((maxX - minWorldX) / (maxWorldX - minWorldX)) * n);\r\n\r\n    const jMinWrapped = ((jMin % n) + n) % n;\r\n    const jMaxDiff = jMax - jMin;\r\n    let jMaxWrapped = (jMinWrapped + jMaxDiff) % n;\r\n    const splitHorizontally = jMinWrapped > jMaxWrapped;\r\n\r\n    if (jMaxDiff >= n || splitHorizontally) {\r\n        const left = worldArray.slice(iMin, iMax).map(row => row.slice(jMinWrapped));\r\n        const right = worldArray.slice(iMin, iMax).map(row => row.slice(0, jMaxWrapped));\r\n        return left.map((row, i) => [...row, ...right[i]]);\r\n    } else {\r\n        return  worldArray.slice(iMin, iMax).map(row => row.slice(jMinWrapped, jMaxWrapped));\r\n    }\r\n}\r\n\r\nexport const getSubArrayMemoized = memoizeOne(getSubArray, (prevArgs, newArgs) => {\r\n    const oldExtent = prevArgs[1];\r\n    const newExtent = newArgs[1];\r\n\r\n    return equals(oldExtent, newExtent);\r\n});","import MapContext from \"../MapContext\";\r\nimport {useContext, useEffect, useRef} from \"react\";\r\nimport {getScripts, initShaderProgram} from \"../../utils\";\r\nimport {fragment, vertex} from \"./shaders\";\r\nimport {createBuffer} from \"./bufferUtils\";\r\nimport {convert, generateParticles, speedFactor, trailLength, updateParticles} from \"./particleUtils\";\r\nimport ImageCanvasSource from \"ol/source/ImageCanvas\";\r\nimport {getSubArrayMemoized as getSubArray} from \"./getSubArray\";\r\nimport ImageLayer from \"ol/layer/Image\";\r\n\r\nexport const WindLayer = ({vectorsData}) => {\r\n    const {map} = useContext(MapContext);\r\n    const layerRef = useRef(null)\r\n    useEffect(() => {\r\n        if(!map) return;\r\n\r\n        return () => {\r\n            if (layerRef.current) {\r\n                map.removeLayer(layerRef.current);\r\n            }\r\n        };\r\n    }, [vectorsData, map]);\r\n    useEffect(() => {\r\n        if(!map) return\r\n        const canvas = document.createElement(\"canvas\")\r\n        const {gl, vertexShaderSource, fragmentShaderSource} = getScripts({current: canvas}, fragment, vertex)\r\n        initShaderProgram(gl, vertexShaderSource, fragmentShaderSource)\r\n\r\n        const particles = []\r\n        createBuffer(gl)\r\n        generateParticles(particles)\r\n        let animationId = null\r\n        const canvasSource = new ImageCanvasSource({\r\n            ratio: 1,\r\n            projection: 'EPSG:4326',\r\n            canvasFunction: (extent, resolution, pixelRatio, size) => {\r\n\r\n                if (animationId) {\r\n                    cancelAnimationFrame(animationId)\r\n                }\r\n\r\n                canvas.width = size[0];\r\n                canvas.height = size[1];\r\n                gl.viewport(0, 0, canvas.width, canvas.height);\r\n                const render = () => {\r\n                    const worldProjection = getSubArray(vectorsData, extent, [-180, -90, 180, 90])\r\n                    updateParticles(particles, speedFactor / 1000, worldProjection)\r\n                    const data = [];\r\n                    particles.forEach(particle => {\r\n                        const {x, y} = convert(particle.x, particle.y, worldProjection[0].length, worldProjection.length)\r\n                        const color = worldProjection[y][x]\r\n                        data.push(particle.x, particle.y, color.r / 255, color.g / 255, 0.0, 1.0);\r\n                        particle.oldPositions.forEach((oldPosition, index) => {\r\n                            const oldX = convert(oldPosition.x, oldPosition.y, worldProjection[0].length, worldProjection.length)\r\n                            const oldColor = worldProjection[oldX.y][oldX.x]\r\n                            data.push(oldPosition.x, oldPosition.y, oldColor.r / 255, oldColor.g / 255, 0.0, 1.0 - (index + 1) / trailLength);\r\n                        });\r\n                    });\r\n\r\n                    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.DYNAMIC_DRAW);\r\n                    gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n                    gl.enable(gl.BLEND);\r\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\r\n                    gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n                    gl.drawArrays(gl.POINTS, 0, data.length / 6);\r\n                    animationId = requestAnimationFrame(() => {\r\n                        canvasSource.changed()\r\n                    })\r\n                }\r\n\r\n                render()\r\n                return canvas;\r\n            },\r\n        });\r\n        const layer = new ImageLayer({\r\n            source: canvasSource,\r\n        });\r\n        layerRef.current = layer;\r\n        map.addLayer(layer)\r\n    }, [map, vectorsData])\r\n    return null\r\n}","export const fragment = `\r\nprecision mediump float;\r\nvarying vec4 vColor;\r\nvoid main() {\r\n    float r = 0.5;\r\n    if (distance(gl_PointCoord, vec2(0.5)) > r) {\r\n        discard;\r\n    }\r\n    gl_FragColor = vColor;\r\n}\r\n`\r\nexport const vertex = `\r\nattribute vec2 position;\r\nattribute vec4 color;\r\nvarying vec4 vColor;\r\nvoid main() {\r\n     gl_Position = vec4(position, 0.0, 1.0);\r\n     gl_PointSize = 2.0;\r\n     vColor = color;\r\n}\r\n`","export const createBuffer = (gl) => {\r\n    const positionLocation = gl.getAttribLocation(gl.program, 'position');\r\n    const positionBuffer = gl.createBuffer();\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 6 * Float32Array.BYTES_PER_ELEMENT, 0);\r\n    gl.enableVertexAttribArray(positionLocation);\r\n    const colorLocation = gl.getAttribLocation(gl.program, 'color');\r\n    gl.vertexAttribPointer(colorLocation, 4, gl.FLOAT, false, 6 * Float32Array.BYTES_PER_ELEMENT, 2 * Float32Array.BYTES_PER_ELEMENT);\r\n    gl.enableVertexAttribArray(colorLocation);\r\n}","import {BUFFER_SIZE} from \"./consts\";\r\n\r\nexport const normalizeLongitude = (lon) => {\r\n    while (lon < -180) lon += 360;\r\n    while (lon > 180) lon -= 360;\r\n    return lon;\r\n}\r\n\r\nexport const normalizeValue = (value) => {\r\n    return (value + 1) / 2;\r\n}\r\n\r\nconst generateParticle = () => ([\r\n    (Math.random() * 2) - 1,\r\n    (Math.random() * 2) - 1,\r\n    Math.ceil(Math.random() * 300),\r\n    0,\r\n    0,\r\n    0,\r\n])\r\nexport const generateParticles = (count) => {\r\n    const particles = new Float32Array(count * BUFFER_SIZE)\r\n    for (let i = 0; i < count * BUFFER_SIZE; i += BUFFER_SIZE) {\r\n        particles.set([...generateParticle()], i)\r\n    }\r\n    return particles\r\n}","export const BUFFER_SIZE = 6","import {BUFFER_SIZE} from \"./consts\";\r\nimport {normalizeLongitude, normalizeValue} from \"./utils\";\r\n\r\nexport const createBufferWithVao = (gl, count, particles) => {\r\n    const buffer = gl.createBuffer();\r\n    const vao = gl.createVertexArray();\r\n    gl.bindVertexArray(vao);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, BUFFER_SIZE * count * 4, gl.DYNAMIC_COPY);\r\n    particles && gl.bufferSubData(gl.ARRAY_BUFFER, 0, particles);\r\n    gl.vertexAttribPointer(0, 1, gl.FLOAT, false, BUFFER_SIZE * 4, 0);\r\n    gl.vertexAttribPointer(1, 1, gl.FLOAT, false, BUFFER_SIZE * 4, 4);\r\n    gl.vertexAttribPointer(2, 1, gl.FLOAT, false, BUFFER_SIZE * 4, 8);\r\n    gl.vertexAttribPointer(3, 3, gl.FLOAT, false, BUFFER_SIZE * 4, 12);\r\n    gl.enableVertexAttribArray(0);\r\n    gl.enableVertexAttribArray(1);\r\n    gl.enableVertexAttribArray(2);\r\n    gl.enableVertexAttribArray(3);\r\n\r\n    return [buffer, vao]\r\n}\r\nexport const createProgram = (gl, vertexShaderSource, fragmentShaderSource, varyings) => {\r\n\r\n    const program = gl.createProgram()\r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER)\r\n    gl.shaderSource(vertexShader, vertexShaderSource)\r\n    gl.compileShader(vertexShader)\r\n    gl.attachShader(program, vertexShader)\r\n\r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(fragmentShader, fragmentShaderSource);\r\n    gl.compileShader(fragmentShader);\r\n    gl.attachShader(program, fragmentShader);\r\n\r\n    varyings && gl.transformFeedbackVaryings(program, varyings, gl.INTERLEAVED_ATTRIBS);\r\n    gl.linkProgram(program);\r\n\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        return false\r\n    }\r\n\r\n    return program\r\n}\r\n\r\nexport const draw = (gl, program, buffers, count, state) => {\r\n    gl.useProgram(program)\r\n    const orderedBuffers = [...buffers.slice(0, state.buffer), ...buffers.slice(state.buffer)]\r\n\r\n    const position = gl.getAttribLocation(program, 'position')\r\n    const color = gl.getAttribLocation(program, 'color')\r\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE)\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    for (let i = 0; i < orderedBuffers.length; i += 2) {\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, orderedBuffers[i])\r\n        gl.enableVertexAttribArray(position)\r\n        gl.vertexAttribPointer(position, 2, gl.FLOAT, false, BUFFER_SIZE * 4, 0)\r\n\r\n        gl.enableVertexAttribArray(color)\r\n        gl.vertexAttribPointer(color, 3, gl.FLOAT, false, BUFFER_SIZE * 4, 12)\r\n\r\n        gl.drawArrays(gl.POINTS, 0, count)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const dataUpdate = (program, gl, state, count, extent, buffers) => {\r\n    gl.useProgram(program)\r\n    gl.enable(gl.RASTERIZER_DISCARD);\r\n    const u_extent = gl.getUniformLocation(program, \"u_extent\");\r\n    gl.bindBuffer(gl.TRANSFORM_FEEDBACK_BUFFER, null);\r\n    const newExtent = [normalizeLongitude(extent[0]) / 180, extent[1] / 90, normalizeLongitude(extent[2]) / 180, extent[3] / 90].map(normalizeValue)\r\n    gl.bindBuffer(gl.TRANSFORM_FEEDBACK_BUFFER, null);\r\n    gl.uniform4fv(u_extent, newExtent)\r\n    gl.bindVertexArray(buffers[state.vao]);\r\n    gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, 0, buffers[state.buffer]);\r\n\r\n    gl.beginTransformFeedback(gl.POINTS);\r\n\r\n    gl.drawArrays(gl.POINTS, 0, count);\r\n\r\n    gl.endTransformFeedback();\r\n\r\n    gl.bindVertexArray(null);\r\n    gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, 0, null);\r\n\r\n    state.vao = (state.vao + 2) >= buffers.length ? 1 : state.vao + 2;\r\n    state.buffer = (state.buffer + 2) >= buffers.length ? 0 : state.buffer + 2;\r\n    gl.disable(gl.RASTERIZER_DISCARD);\r\n}\r\n\r\nexport const createTexture = (gl, image, program) => {\r\n    const texture = gl.createTexture()\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.uniform1i(gl.getUniformLocation(program, 'u_Texture'), 0);\r\n}\r\nexport const loadImageData = (gl, program, src, callback) => {\r\n    const image = new Image();\r\n\r\n    image.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = image.width;\r\n        canvas.height = image.height;\r\n\r\n        ctx.drawImage(image, 0, 0);\r\n\r\n        createTexture(gl, image, program)\r\n        callback(true)\r\n    };\r\n    image.src = src\r\n};","import React, {useContext, useEffect, useRef, useState} from \"react\";\r\nimport MapContext from \"../../MapContext\";\r\nimport ImageCanvasSource from \"ol/source/ImageCanvas\";\r\nimport ImageLayer from \"ol/layer/Image\";\r\nimport {fShaderDraw, fShaderCalculate, vShaderCalculate, vShaderDraw} from \"./shaders\";\r\nimport {generateParticles} from \"./utils\";\r\nimport {draw, dataUpdate, createProgram, createBufferWithVao, loadImageData} from \"./webglUtils\";\r\n\r\n\r\nexport const WindLayerTransformFeedback = ({src, trailLength, particlesNumber, speed}) => {\r\n    const canvas = useRef(document.createElement(\"canvas\")).current\r\n    const [particles, setParticles] = useState(generateParticles(particlesNumber))\r\n    const gl = useRef(canvas.getContext('webgl2')).current\r\n    const programFeedback = useRef(createProgram(gl, vShaderCalculate, fShaderCalculate, ['ox', 'oy', 'oLife', 'oColor'])).current\r\n    const drawProgram = useRef(createProgram(gl, vShaderDraw, fShaderDraw)).current\r\n    const {map} = useContext(MapContext);\r\n    const layerRef = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        gl.useProgram(programFeedback)\r\n        gl.uniform1f(gl.getUniformLocation(programFeedback, 'u_speed'), speed / 10000);\r\n    }, [speed])\r\n\r\n    useEffect(() => {\r\n        setParticles(generateParticles(particlesNumber))\r\n    }, [particlesNumber])\r\n    useEffect(() => {\r\n        if (!map) return;\r\n\r\n        return () => {\r\n            if (layerRef.current) {\r\n                map.removeLayer(layerRef.current);\r\n            }\r\n        };\r\n    }, [src, map, trailLength, particlesNumber, particles]);\r\n\r\n    useEffect(() => {\r\n        if (!map) return\r\n        const buffers = new Array(trailLength).fill(-1).map((_, id) => id === 0 ? createBufferWithVao(gl, particlesNumber, particles) : createBufferWithVao(gl, particlesNumber)).flatMap(i => i)\r\n        gl.bindVertexArray(null);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        const state = {\r\n            vao: 1,\r\n            buffer: 2\r\n        }\r\n        let dataLoaded = false\r\n\r\n        loadImageData(gl, programFeedback, src, (value) => {\r\n            dataLoaded = value\r\n        })\r\n        let animationId = null\r\n        const canvasSource = new ImageCanvasSource({\r\n            ratio: 1,\r\n            projection: 'EPSG:4326',\r\n            canvasFunction: (extent, resolution, pixelRatio, size) => {\r\n                if (animationId) {\r\n                    cancelAnimationFrame(animationId)\r\n                }\r\n                if (!dataLoaded) {\r\n                    animationId = requestAnimationFrame(() => {\r\n                        canvasSource.changed()\r\n                    })\r\n                    return\r\n                }\r\n\r\n                canvas.width = size[0];\r\n                canvas.height = size[1];\r\n                gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n\r\n                const animate = () => {\r\n                    draw(gl, drawProgram, buffers, particlesNumber, state)\r\n                    dataUpdate(programFeedback, gl, state, particlesNumber, extent, buffers)\r\n                }\r\n                animate()\r\n                animationId = requestAnimationFrame(() => {\r\n                    canvasSource.changed()\r\n                })\r\n\r\n\r\n                return canvas;\r\n            },\r\n        });\r\n        const layer = new ImageLayer({\r\n            source: canvasSource,\r\n        });\r\n        layerRef.current = layer;\r\n        map.addLayer(layer)\r\n    }, [map, src, particles, trailLength, particlesNumber])\r\n\r\n\r\n    return null\r\n}","export const vShaderCalculate = `#version 300 es\r\nlayout(location=0) in float ix;\r\nlayout(location=1) in float iy;\r\nlayout(location=2) in float iLife;\r\nlayout(location=3) in float iColor;\r\nuniform sampler2D u_texture;\r\n\r\nout float ox;\r\nout float oy;\r\nout float oLife;\r\nout vec3 oColor;\r\n\r\nuniform vec4 u_extent;\r\nuniform float u_speed;\r\n\r\nvec2 getTextureCoord(float normalizedX, float normalizedY) {\r\n  float newX;\r\n\r\n  if (u_extent.x < u_extent.z) {\r\n    newX = normalizedX;\r\n  } else {\r\n    if(normalizedX > u_extent.x) {\r\n      newX = mix(u_extent.x, 1.0, (normalizedX - u_extent.x) / (1.0 - u_extent.x));\r\n    } else {\r\n      newX = mix(0.0, u_extent.z, normalizedX / u_extent.z);\r\n    }\r\n  }\r\n\r\n  return vec2(newX, normalizedY);\r\n}\r\n\r\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\r\nfloat random(const vec2 co) {\r\n  float t = dot(rand_constants.xy, co);\r\n  return fract(sin(t) * (rand_constants.z + t));\r\n}\r\n\r\nvoid main()\r\n{\r\n  float speed = u_speed;\r\n  float normalizedX;\r\n  if(u_extent.z <= u_extent.x) {\r\n    normalizedX = ((ix + 1.0) / 2.0) * (1.0 + u_extent.z - u_extent.x) + u_extent.x;\r\n    if(normalizedX > 1.0) normalizedX -= 1.0;\r\n  } else {\r\n    normalizedX = ((ix + 1.0) / 2.0) * (u_extent.z - u_extent.x) + u_extent.x;\r\n  }\r\n  float normalizedY = ((iy + 1.0) / 2.0) * (u_extent.a - u_extent.y) + u_extent.y;\r\n  vec2 texCoords = getTextureCoord(normalizedX, normalizedY);\r\n  vec4 texel = texture(u_texture, texCoords);\r\n  ox = ix + ((texel.r) * 2.0 - 1.0) * speed;\r\n  oy = iy + ((texel.g) * 2.0 - 1.0) * speed;\r\n  oColor = vec3(texel.r, texel.g, texel.b);\r\n  if (iLife > 400.0 || ox < -1.0 || ox > 1.0 || oy < -1.0 || oy > 1.0) {\r\n    float randValX = random(vec2(ix, iy)) * 2.0 - 1.0;\r\n    float randValY = random(vec2(iy, ix)) * 2.0 - 1.0;\r\n    float randLife = random(vec2(randValX, randValY)) * 300.0;\r\n\r\n    ox = randValX;\r\n    oy = randValY;\r\n    oLife = randLife;\r\n  }\r\n  else {\r\n    oLife = iLife + 1.0;\r\n  }\r\n}`\r\n\r\nexport const fShaderCalculate = `#version 300 es\r\nvoid main() {\r\n}`\r\n\r\nexport const fShaderDraw = `#version 300 es\r\nprecision mediump float;\r\nout vec4 color;\r\nin vec3 vColor;\r\nvoid main() {\r\n  color = vec4(vColor, 1.0);\r\n}`\r\n\r\nexport const vShaderDraw = `#version 300 es\r\nlayout(location = 0) in vec2 position;\r\nlayout(location = 1) in vec3 color;\r\n\r\nout vec3 vColor;\r\n\r\nvoid main()\r\n{\r\n  gl_Position = vec4(position, 0.0, 1.0);\r\n  gl_PointSize = 0.5;\r\n  vColor = color;\r\n}`","import React, {useEffect, useRef, useState} from \"react\";\r\nimport Map from \"./Map\";\r\nimport {Layers, TileLayer, VectorLayer} from \"./Layers\";\r\nimport {fromLonLat, get} from \"ol/proj\";\r\nimport {WindLayer} from \"./Map/WindLayer/WindLayer\";\r\nimport img from '../src/Map/WindLayer/2016112000.png'\r\nimport img2 from '../src/Map/WindLayer/2016112118.png'\r\nimport img3 from '../src/Map/WindLayer/2016112106.png'\r\nimport {loadImageData} from \"./Map/WindLayer/loadImageData\";\r\n\r\nimport mapConfig from \"./config.json\";\r\nimport \"./App.css\";\r\nimport {Experiment} from \"./Experiment\";\r\nimport {WindLayerTransformFeedback} from \"./Map/WindLayer/WindLayerTransformFeedback/WindLayerTransformFeedback\";\r\n\r\n\r\nconst images = [img, img2, img3]\r\nconst App = () => {\r\n    const [center, setCenter] = useState(mapConfig.center);\r\n    const [zoom, setZoom] = useState(1);\r\n    const [version, setVersion] = useState(2)\r\n    const [trailLength, setTrailLength] = useState(20)\r\n    const [speed, setSpeed] = useState(30)\r\n    const [particlesNumber, setParticlesNumber] = useState(20000)\r\n    const [windLayerData, setWindLayerData] = useState(null)\r\n    const [activeImage, setActiveImage] = useState(img)\r\n\r\n    useEffect(() => {\r\n        loadImageData(activeImage, (data) => {\r\n            setWindLayerData(data)\r\n        })\r\n    }, [activeImage])\r\n    return (\r\n        <div>\r\n            <Map center={fromLonLat(center)} zoom={zoom}>\r\n                <Layers>\r\n                    {windLayerData && version === 1 ? <WindLayer vectorsData={windLayerData}/> : null}\r\n                    {version === 2 && <WindLayerTransformFeedback particlesNumber={particlesNumber} src={activeImage} trailLength={trailLength} speed={speed}/>}\r\n                </Layers>\r\n            </Map>\r\n            <div>\r\n                <fieldset>\r\n                    <legend>Version:</legend>\r\n\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                setTrailLength(Number(e.target.value))\r\n                            }}\r\n                            type=\"range\"\r\n                            id=\"trail length\"\r\n                            name=\"trail length\"\r\n                            min={2}\r\n                            max={50}\r\n                            value={trailLength}/>\r\n                        <label htmlFor=\"trail length\">Trail Length {trailLength}</label>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                setParticlesNumber(Number(e.target.value))\r\n                            }}\r\n                            type=\"range\"\r\n                            id=\"Particles number\"\r\n                            name=\"Particles number\"\r\n                            min={5000}\r\n                            max={100000}\r\n                            value={particlesNumber}/>\r\n                        <label htmlFor=\"Particles number\">Particles number {particlesNumber}</label>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                setSpeed(Number(e.target.value))\r\n                            }}\r\n                            type=\"range\"\r\n                            id=\"Speed\"\r\n                            name=\"Speed\"\r\n                            min={20}\r\n                            max={100}\r\n                            value={speed}/>\r\n                        <label htmlFor=\"Particles number\">Speed {speed}</label>\r\n                    </div>\r\n\r\n                </fieldset>\r\n            </div>\r\n            <div>\r\n                <fieldset>\r\n                    <legend>Version:</legend>\r\n\r\n                    <div>\r\n                        <input onChange={() => setVersion(1)} type=\"radio\" id=\"huey\" name=\"drone\" value={1}\r\n                               checked={version === 1}/>\r\n                        <label htmlFor=\"huey\">PlainJS</label>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input onChange={() => setVersion(2)} type=\"radio\" id=\"dewey\" name=\"drone\" value=\"dewey\"\r\n                               checked={version === 2}/>\r\n                        <label htmlFor=\"dewey\">TransformFeedback</label>\r\n                    </div>\r\n                </fieldset>\r\n                <div>Choose image</div>\r\n                {images.map(i => {\r\n                    return (\r\n                        <div\r\n                            onClick={() => {\r\n                                setActiveImage(i)\r\n                            }}\r\n                            style={{background: i === activeImage ? 'red' : \"blue\"}}\r\n                            key={i}>\r\n                            {i}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","export const loadImageData = (src, callback) => {\r\n    const image = new Image()\r\n    const data = []\r\n    image.onload = () => {\r\n        const canvas = document.createElement('canvas')\r\n        const ctx = canvas.getContext('2d')\r\n        canvas.width = image.width\r\n        canvas.height = image.height\r\n\r\n        ctx.drawImage(image, 0, 0)\r\n        const img = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const imageData = img.data\r\n        for (let i = 0; i < imageData.length; i += 4) {\r\n            data.push({\r\n                r: imageData[i],\r\n                g: imageData[i + 1],\r\n                b: imageData[i + 2],\r\n            });\r\n        }\r\n        const groupedData = data.reduce((res, _, id, arr) => {\r\n            if (id % img.width === 0) {\r\n                res.push(arr.slice(id, id + img.width))\r\n            }\r\n            return res\r\n        }, []).reverse()\r\n        callback(groupedData)\r\n    }\r\n    image.src = src\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/2016112000.3a65a12c.png\";","module.exports = __webpack_public_path__ + \"static/media/2016112118.5acbc219.png\";","module.exports = __webpack_public_path__ + \"static/media/2016112106.d92cb4ab.png\";"],"sourceRoot":""}