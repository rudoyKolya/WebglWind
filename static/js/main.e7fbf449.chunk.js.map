{"version":3,"sources":["Map/MapContext.js","Source/xyz.js","Source/osm.js","Map/Map.js","Layers/Layers.js","utils.js","Map/WindLayer/particleUtils.js","Map/WindLayer/WindLayer.js","Map/WindLayer/shaders.js","Map/WindLayer/bufferUtils.js","Map/WindLayer/getSubArray.js","App.js","Map/WindLayer/loadImageData.js","serviceWorker.js","index.js","Map/WindLayer/2016112000.png","Map/WindLayer/2016112118.png","Map/WindLayer/2016112106.png"],"names":["MapContext","React","createContext","xyz","osm","obj","olSource","Map","children","zoom","center","mapRef","useRef","useState","map","setMap","useEffect","layer","OLTileLayer","source","on","event","context","globalCompositeOperation","fillStyle","fillRect","canvas","width","height","options","view","ol","projection","getProjection","maxZoom","minZoom","layers","controls","overlays","mapObject","setTarget","current","undefined","getView","setZoom","setCenter","Provider","value","ref","className","Layers","loadShader","gl","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","console","log","deleteShader","initShaderProgram","vSource","fSource","program","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","useProgram","generateParticle","oldPositions","x","Math","random","y","life","ceil","mapToIndex","number","n","round","convert","WindLayer","vectorsData","useContext","layerRef","removeLayer","fShader","vShader","document","createElement","getContext","vertexShaderSource","fragmentShaderSource","particles","positionLocation","getAttribLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","Float32Array","BYTES_PER_ELEMENT","enableVertexAttribArray","colorLocation","currentArea","push","generateParticles","animationId","canvasSource","ImageCanvasSource","ratio","canvasFunction","extent","resolution","pixelRatio","size","cancelAnimationFrame","viewport","worldProjection","worldArray","worldExtent","m","length","minX","minY","maxX","maxY","minWorldX","minWorldY","maxWorldX","maxWorldY","iMin","floor","iMax","jMin","jMax","jMinWrapped","jMaxDiff","jMaxWrapped","left","slice","row","right","i","getSubArray","speedFactor","windDirectionData","forEach","particle","oldPosition","vx","r","vy","g","speed","Object","assign","unshift","pop","updateParticles","data","color","index","oldX","oldColor","bufferData","DYNAMIC_DRAW","clearColor","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","clear","COLOR_BUFFER_BIT","drawArrays","POINTS","requestAnimationFrame","changed","render","ImageLayer","addLayer","images","img","img2","img3","App","mapConfig","windLayerData","setWindLayerData","activeImage","setActiveImage","src","callback","image","Image","onload","ctx","drawImage","getImageData","imageData","b","groupedData","reduce","res","_","id","arr","reverse","loadImageData","fromLonLat","onClick","style","background","key","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.e7fbf449.chunk.js","sourcesContent":["import React from \"react\";\r\nconst MapContext = new React.createContext();\r\nexport default MapContext;\r\n","import * as olSource from \"ol/source\";\r\n\r\nfunction xyz({ url, attributions, maxZoom }) {\r\n\treturn new olSource.XYZ({ url, attributions, maxZoom });\r\n}\r\n\r\nexport default xyz;\r\n","import * as olSource from \"ol/source\";\r\n\r\nfunction osm(obj) {\r\n\treturn new olSource.OSM(obj);\r\n}\r\n\r\nexport default osm;","import React, {useRef, useState, useEffect} from \"react\"\r\nimport \"./Map.css\";\r\nimport MapContext from \"./MapContext\";\r\nimport * as ol from \"ol\";\r\nimport {get as getProjection} from 'ol/proj';\r\nimport OLTileLayer from \"ol/layer/Tile\";\r\nimport {osm} from \"../Source\";\r\n\r\n\r\nconst Map = ({children, zoom, center}) => {\r\n    const mapRef = useRef();\r\n    const [map, setMap] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const layer = new OLTileLayer({\r\n            source: osm(),\r\n        })\r\n        layer.on('postrender', function (event) {\r\n            event.context.globalCompositeOperation = 'destination-over';\r\n            event.context.fillStyle = 'rgba(170, 211, 223, 1)';\r\n            event.context.fillRect(\r\n                0,\r\n                0,\r\n                event.context.canvas.width,\r\n                event.context.canvas.height / 2\r\n            );\r\n            event.context.fillStyle = 'rgba(242, 239, 233, 1)';\r\n            event.context.fillRect(\r\n                0,\r\n                event.context.canvas.height / 2,\r\n                event.context.canvas.width,\r\n                event.context.canvas.height / 2\r\n            );\r\n            event.context.globalCompositeOperation = 'source-over';\r\n        });\r\n        let options = {\r\n            view: new ol.View({\r\n                projection: getProjection('EPSG:4326'),\r\n                center: [0, 0],\r\n                zoom: 2,\r\n                maxZoom: 10,\r\n                minZoom: 1\r\n            }),\r\n            layers: [\r\n                layer\r\n            ],\r\n\r\n\r\n            controls: [],\r\n            overlays: []\r\n        };\r\n\r\n        let mapObject = new ol.Map(options);\r\n        mapObject.setTarget(mapRef.current);\r\n        setMap(mapObject);\r\n        return () => mapObject.setTarget(undefined);\r\n    }, []);\r\n\r\n    // zoom change handler\r\n    useEffect(() => {\r\n        if (!map) return;\r\n        map.getView().setZoom(zoom);\r\n    }, [zoom]);\r\n\r\n    // center change handler\r\n    useEffect(() => {\r\n        if (!map) return;\r\n\r\n        map.getView().setCenter(center)\r\n    }, [center])\r\n\r\n    return (\r\n        <MapContext.Provider value={{map}}>\r\n            <div ref={mapRef} className=\"ol-map\">\r\n                {children}\r\n            </div>\r\n        </MapContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Map;","import React from \"react\";\r\n\r\nconst Layers = ({ children }) => {\r\n\treturn <div>{children}</div>;\r\n};\r\n\r\nexport default Layers;","export const loadShader = (gl, type, source) => {\r\n    const shader = gl.createShader(type)\r\n    if (!shader) {\r\n        return null\r\n    }\r\n\r\n    gl.shaderSource(shader, source)\r\n    gl.compileShader(shader)\r\n\r\n    const isCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\r\n    if (!isCompiled) {\r\n        const error = gl.getShaderInfoLog(shader);\r\n        console.log(error)\r\n        gl.deleteShader(shader)\r\n        return null\r\n    }\r\n    return shader\r\n}\r\n\r\nexport const createProgram = (gl, vSource, fSource) => {\r\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vSource);\r\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fSource);\r\n    if (!vertexShader || !fragmentShader) {\r\n        return null\r\n    }\r\n\r\n    const program = gl.createProgram()\r\n    if (!program) {\r\n        return null\r\n    }\r\n\r\n    gl.attachShader(program, vertexShader)\r\n    gl.attachShader(program, fragmentShader)\r\n    gl.linkProgram(program)\r\n\r\n    const isLinked = gl.getProgramParameter(program, gl.LINK_STATUS)\r\n    if (!isLinked) {\r\n        gl.deleteProgram(program);\r\n        gl.deleteShader(fragmentShader);\r\n        gl.deleteShader(vertexShader);\r\n        return null;\r\n    }\r\n    return program\r\n}\r\nexport const initShaderProgram = (gl, vSource, fSource) => {\r\n    const program = createProgram(gl, vSource, fSource)\r\n    if (!program) {\r\n        return false\r\n    }\r\n\r\n    gl.useProgram(program)\r\n    gl.program = program\r\n    return true\r\n}\r\n\r\nexport const getScripts = (ref, fShader, vShader) => {\r\n    const gl = ref.current.getContext('webgl')\r\n\r\n    return {gl, vertexShaderSource: vShader, fragmentShaderSource: fShader, canvas: ref}\r\n}","export const particlesNumber = 10000\r\nexport const trailLength = 10\r\n\r\nexport const speedFactor = 2\r\n\r\n\r\nexport const generateParticle = (oldPositions = []) => {\r\n    return ({\r\n        x: (Math.random() * 2) - 1,\r\n        y: (Math.random() * 2) - 1,\r\n        life: Math.ceil(Math.random() * 200),\r\n        oldPositions,\r\n    })\r\n}\r\n\r\nexport const generateParticles = (particles) => {\r\n    let currentArea = 0\r\n    while (currentArea < particlesNumber) {\r\n        particles.push(generateParticle())\r\n        currentArea += 1\r\n    }\r\n}\r\nexport const mapToIndex = (number, n) =>  {\r\n    return Math.round((number + 1) * (n - 1) / 2);\r\n}\r\nexport const convert = (x, y, width, height) => {\r\n    return {\r\n        x: mapToIndex(x, width),\r\n        y: mapToIndex(y, height),\r\n    }\r\n}\r\n\r\n\r\nexport const updateParticles = (particles, speedFactor, windDirectionData) => {\r\n    particles.forEach((particle) => {\r\n        const oldPosition = {x: particle.x, y: particle.y}\r\n        particle.life += 1;\r\n        const {x, y} = convert(particle.x, particle.y, windDirectionData[0].length, windDirectionData.length)\r\n        const vx = windDirectionData[y][x].r / 255 * 2 - 1;\r\n        const vy = windDirectionData[y][x].g / 255 * 2 - 1;\r\n        const speed = windDirectionData[y][x].g / 255 + windDirectionData[y][x].r / 255;\r\n        if (particle.life >= 300 || (particle.x + (vx * speedFactor * speed)) > 1 || (particle.x + (vx * speedFactor * speed)) < -1 || (particle.y + (vy * speedFactor * speed)) > 1 || (particle.y + (vy * speedFactor * speed)) < -1) {\r\n            Object.assign(particle, generateParticle(particle.oldPositions));\r\n        } else {\r\n            particle.x += (vx * speedFactor * speed);\r\n            particle.y += (vy * speedFactor * speed);\r\n            particle.oldPositions.unshift(oldPosition);\r\n            if (particle.oldPositions.length > trailLength) {\r\n                particle.oldPositions.pop();\r\n            }\r\n        }\r\n    });\r\n}","import MapContext from \"../MapContext\";\r\nimport {useContext, useEffect, useRef} from \"react\";\r\nimport {getScripts, initShaderProgram} from \"../../utils\";\r\nimport {fragment, vertex} from \"./shaders\";\r\nimport {createBuffer} from \"./bufferUtils\";\r\nimport {convert, generateParticles, speedFactor, trailLength, updateParticles} from \"./particleUtils\";\r\nimport ImageCanvasSource from \"ol/source/ImageCanvas\";\r\nimport {getSubArray} from \"./getSubArray\";\r\nimport ImageLayer from \"ol/layer/Image\";\r\n\r\nexport const WindLayer = ({vectorsData}) => {\r\n    const {map} = useContext(MapContext);\r\n    const layerRef = useRef(null)\r\n    useEffect(() => {\r\n        if(!map) return;\r\n\r\n        return () => {\r\n            if (layerRef.current) {\r\n                map.removeLayer(layerRef.current);\r\n            }\r\n        };\r\n    }, [vectorsData, map]);\r\n    useEffect(() => {\r\n        if(!map) return\r\n        const canvas = document.createElement(\"canvas\")\r\n        const {gl, vertexShaderSource, fragmentShaderSource} = getScripts({current: canvas}, fragment, vertex)\r\n        initShaderProgram(gl, vertexShaderSource, fragmentShaderSource)\r\n\r\n        const particles = []\r\n        createBuffer(gl)\r\n        generateParticles(particles)\r\n        let animationId = null\r\n        const canvasSource = new ImageCanvasSource({\r\n            ratio: 1,\r\n            projection: 'EPSG:4326',\r\n            canvasFunction: (extent, resolution, pixelRatio, size) => {\r\n\r\n                if (animationId) {\r\n                    cancelAnimationFrame(animationId)\r\n                }\r\n\r\n                canvas.width = size[0];\r\n                canvas.height = size[1];\r\n\r\n                gl.viewport(0, 0, canvas.width, canvas.height);\r\n                const render = () => {\r\n                    const worldProjection = getSubArray(vectorsData, extent, [-180, -90, 180, 90])\r\n                    updateParticles(particles, speedFactor / 1000, worldProjection)\r\n                    const data = [];\r\n                    particles.forEach(particle => {\r\n                        const {x, y} = convert(particle.x, particle.y, worldProjection[0].length, worldProjection.length)\r\n                        const color = worldProjection[y][x]\r\n                        data.push(particle.x, particle.y, color.r / 255, color.g / 255, 0.0, 1.0);\r\n                        particle.oldPositions.forEach((oldPosition, index) => {\r\n                            const oldX = convert(oldPosition.x, oldPosition.y, worldProjection[0].length, worldProjection.length)\r\n                            const oldColor = worldProjection[oldX.y][oldX.x]\r\n                            data.push(oldPosition.x, oldPosition.y, oldColor.r / 255, oldColor.g / 255, 0.0, 1.0 - (index + 1) / trailLength);\r\n                        });\r\n                    });\r\n\r\n                    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.DYNAMIC_DRAW);\r\n                    gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n                    gl.enable(gl.BLEND);\r\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\r\n                    gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n                    gl.drawArrays(gl.POINTS, 0, data.length / 6);\r\n                    animationId = requestAnimationFrame(() => {\r\n                        canvasSource.changed()\r\n                    })\r\n                }\r\n\r\n                render()\r\n                return canvas;\r\n            },\r\n        });\r\n        const layer = new ImageLayer({\r\n            source: canvasSource,\r\n        });\r\n        layerRef.current = layer;\r\n        map.addLayer(layer)\r\n    }, [map, vectorsData])\r\n    return null\r\n}","export const fragment = `\r\nprecision mediump float;\r\nvarying vec4 vColor;\r\nvoid main() {\r\n    float r = 0.5;\r\n    if (distance(gl_PointCoord, vec2(0.5)) > r) {\r\n        discard;\r\n    }\r\n    gl_FragColor = vColor;\r\n}\r\n`\r\nexport const vertex = `\r\nattribute vec2 position;\r\nattribute vec4 color;\r\nvarying vec4 vColor;\r\nvoid main() {\r\n     gl_Position = vec4(position, 0.0, 1.0);\r\n     gl_PointSize = 2.0;\r\n     vColor = color;\r\n}\r\n`","export const createBuffer = (gl) => {\r\n    const positionLocation = gl.getAttribLocation(gl.program, 'position');\r\n    const positionBuffer = gl.createBuffer();\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 6 * Float32Array.BYTES_PER_ELEMENT, 0);\r\n    gl.enableVertexAttribArray(positionLocation);\r\n    const colorLocation = gl.getAttribLocation(gl.program, 'color');\r\n    gl.vertexAttribPointer(colorLocation, 4, gl.FLOAT, false, 6 * Float32Array.BYTES_PER_ELEMENT, 2 * Float32Array.BYTES_PER_ELEMENT);\r\n    gl.enableVertexAttribArray(colorLocation);\r\n}","export const getSubArray = (worldArray, extent, worldExtent) => {\r\n    const m = worldArray.length;\r\n    const n = worldArray[0].length;\r\n\r\n    const [minX, minY, maxX, maxY] = extent;\r\n\r\n    const [minWorldX, minWorldY, maxWorldX, maxWorldY] = worldExtent;\r\n\r\n    let iMin = Math.floor(((minY - minWorldY) / (maxWorldY - minWorldY)) * m);\r\n    let iMax = Math.floor(((maxY - minWorldY) / (maxWorldY - minWorldY)) * m);\r\n    let jMin = Math.floor(((minX - minWorldX) / (maxWorldX - minWorldX)) * n);\r\n    let jMax = Math.floor(((maxX - minWorldX) / (maxWorldX - minWorldX)) * n);\r\n\r\n    const jMinWrapped = ((jMin % n) + n) % n;\r\n    const jMaxDiff = jMax - jMin;\r\n    let jMaxWrapped = (jMinWrapped + jMaxDiff) % n;\r\n    const splitHorizontally = jMinWrapped > jMaxWrapped;\r\n\r\n    if (jMaxDiff >= n || splitHorizontally) {\r\n        const left = worldArray.slice(iMin, iMax).map(row => row.slice(jMinWrapped));\r\n        const right = worldArray.slice(iMin, iMax).map(row => row.slice(0, jMaxWrapped));\r\n        return left.map((row, i) => [...row, ...right[i]]);\r\n    } else {\r\n        return  worldArray.slice(iMin, iMax).map(row => row.slice(jMinWrapped, jMaxWrapped));\r\n    }\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport Map from \"./Map\";\r\nimport {Layers, TileLayer, VectorLayer} from \"./Layers\";\r\nimport {fromLonLat, get} from \"ol/proj\";\r\nimport {WindLayer} from \"./Map/WindLayer/WindLayer\";\r\nimport img from '../src/Map/WindLayer/2016112000.png'\r\nimport img2 from '../src/Map/WindLayer/2016112118.png'\r\nimport img3 from '../src/Map/WindLayer/2016112106.png'\r\nimport {loadImageData} from \"./Map/WindLayer/loadImageData\";\r\n\r\nimport mapConfig from \"./config.json\";\r\nimport \"./App.css\";\r\n\r\n\r\nconst images = [img, img2, img3]\r\nconst App = () => {\r\n    const [center, setCenter] = useState(mapConfig.center);\r\n    const [zoom, setZoom] = useState(1);\r\n    const [windLayerData, setWindLayerData] = useState(null)\r\n    const [activeImage, setActiveImage] = useState(img)\r\n\r\n    useEffect(() => {\r\n        loadImageData(activeImage, (data) => {\r\n            debugger\r\n            setWindLayerData(data)\r\n        })\r\n    }, [activeImage])\r\n    return (\r\n        <div>\r\n            <Map center={fromLonLat(center)} zoom={zoom}>\r\n                <Layers>\r\n                    {windLayerData ? <WindLayer vectorsData={windLayerData}/> : null}\r\n                </Layers>\r\n            </Map>\r\n            <div>\r\n                <div>Choose image</div>\r\n                {images.map(i => {\r\n                    return (\r\n                        <div\r\n                            onClick={() => {\r\n                                setActiveImage(i)\r\n                            }}\r\n                            style={{background: i === activeImage ? 'red' : \"blue\"}}\r\n                            key={i}>\r\n                            {i}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","export const loadImageData = (src, callback) => {\r\n    const image = new Image()\r\n    const data = []\r\n    image.onload = () => {\r\n        const canvas = document.createElement('canvas')\r\n        const ctx = canvas.getContext('2d')\r\n        canvas.width = image.width\r\n        canvas.height = image.height\r\n\r\n        ctx.drawImage(image, 0, 0)\r\n        const img = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const imageData = img.data\r\n        for (let i = 0; i < imageData.length; i += 4) {\r\n            data.push({\r\n                r: imageData[i],\r\n                g: imageData[i + 1],\r\n                b: imageData[i + 2],\r\n            });\r\n        }\r\n        const groupedData = data.reduce((res, _, id, arr) => {\r\n            if (id % img.width === 0) {\r\n                res.push(arr.slice(id, id + img.width))\r\n            }\r\n            return res\r\n        }, []).reverse()\r\n        callback(groupedData)\r\n    }\r\n    image.src = src\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/2016112000.3a65a12c.png\";","module.exports = __webpack_public_path__ + \"static/media/2016112118.5acbc219.png\";","module.exports = __webpack_public_path__ + \"static/media/2016112106.d92cb4ab.png\";"],"sourceRoot":""}